<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!--LOGO STYLE-->
    <Style x:Key="Logo" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#512DA8"/>
        <Setter Property="FontFamily" Value="../fonts/#Open Sans ExtraBold"/>
        <Setter Property="FontSize" Value="32"/>
    </Style>

    <!--LABEL STYLE-->
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="#252525"/>
        <Setter Property="FontFamily" Value="../fonts/#Montserrat Medium"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <!--BUTTON STYLE-->
    <Style x:Key="MainButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#FAFAFA"/>
        <Setter Property="FontFamily" Value="../fonts/#Montserrat Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="10,2,10,3"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#673AB7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#7E57C2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GenerateButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#343434"/>
        <Setter Property="FontFamily" Value="../fonts/#Montserrat Medium"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="10,2,10,3"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#B0BEC5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#CFD8DC"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--TEXT_BOX STYLE-->
    <Style x:Key="MainTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#343434"/>
        <Setter Property="FontFamily" Value="../fonts/#Montserrat Medium"/>
        <Setter Property="Padding" Value="0,2,0,0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border 
                          Name="Border"
                          CornerRadius="2" 
                          Padding="2"
                          Background="#FAFAFA"
                          BorderBrush="#EEEEEE"
                          BorderThickness="2" >
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--PASSWORD_BOX STYLE-->
    <Style x:Key="MainPasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="Foreground" Value="#343434"/>
        <Setter Property="FontFamily" Value="../fonts/#Montserrat Medium"/>
        <Setter Property="Padding" Value="0,2,0,0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border 
                          Name="Border"
                          CornerRadius="2" 
                          Padding="2"
                          Background="#FAFAFA"
                          BorderBrush="#CFD8DC"
                          BorderThickness="2" >
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TAB_CONTROL STYLE-->
    <Style TargetType="TabControl">
        <Setter Property="Foreground" Value="#252525"/>
        <Setter Property="FontFamily" Value="../fonts/#Montserrat Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="BorderBrush" Value="#EEEEEE"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="#FAFAFA"/>
    </Style>
    
    <!--TAB_ITEM STYLE-->
    <Style TargetType="TabItem">
        <Setter Property="Background" Value="#F5F5F5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Margin="0,0,0,0" Background="Transparent"
                  BorderBrush="#EEEEEE" BorderThickness="2,2,2,0" Padding="5" CornerRadius="2">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              ContentSource="Header" Margin="12,2,12,2"
                              RecognizesAccessKey="True" Cursor="Hand"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Foreground" Value="#673AB7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--COMBO_BOX STYLE-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="2"
                  Background="#F5F5F5"
                  BorderBrush="#EEEEEE"
                  BorderThickness="2" />
                        <Border 
                  Grid.Column="0"
                  CornerRadius="2,0,0,2" 
                  Margin="1" 
                  Background="#F5F5F5" 
                  BorderBrush="#EEEEEE"
                  BorderThickness="0,0,2,0" />
                        <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="#343434"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#F5F5F5"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#673AB7"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#F5F5F5" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#F5F5F5" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#EEEEEE" />
                <Setter Property="Foreground" Value="#EEEEEE"/>
                
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" BorderThickness="2"/>
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <Setter Property="Foreground" Value="#343434"/>
        <Setter Property="FontFamily" Value="../fonts/#Montserrat Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False" 
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="Transparent"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid 
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                    x:Name="DropDownBorder"
                                    Background="#FAFAFA"
                                    BorderThickness="2"
                                    BorderBrush="#EEEEEE"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#EEEEEE"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!--COMBO_BOX_ITEM STYLE-->
    <Style TargetType="ComboBoxItem">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F5F5F5"/>
                <Setter Property="Foreground" Value="#673AB7"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--GROUP_BOX STYLE-->
    <Style TargetType="GroupBox">
        <Setter Property="BorderBrush" Value="#EEEEEE"/>
        <Setter Property="Foreground" Value="#343434"/>
        <Setter Property="FontFamily" Value="../fonts/#Open Sans Italic"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="#FAFAFA"/>
    </Style>

    <!--STATUS STYLE-->
    <Style x:Key="Status" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#BDBDBD"/>
        <Setter Property="FontFamily" Value="../fonts/#Open Sans Bold Italic"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <!--COLOR_RECTANGLE STYLE-->
    <Style x:Key="ColorRectangle" TargetType="{x:Type Rectangle}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Margin" Value="5,0,5,0"/>
    </Style>

    <!--MAIN_WRAP_PANEL STYLE-->
    <Style x:Key="WrapPanel" TargetType="{x:Type WrapPanel}">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>
    
    <!--MAIN_STACK_PANEL STYLE-->
    <Style x:Key="StackPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <!--PARAM_LABEL STYLE-->
    <Style x:Key="ParamLabel" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#343434"/>
        <Setter Property="FontFamily" Value="../fonts/#Montserrat Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>    
    
    <!--RADIO_BUTTON STYLE-->
    <Style x:Key="MainRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="#343434"/>
        <Setter Property="FontFamily" Value="../fonts/#Montserrat Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisual}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="16" 
                                Height="16">
                                <Ellipse x:Name="Border"  
                                    Fill="#FAFAFA"
                                    StrokeThickness="2"
                                    Stroke="#E0E0E0" />
                                <Ellipse x:Name="CheckMark"
                                    Margin="4"
                                    Fill="#673AB7" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter 
                            Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="#EEEEEE" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="#673AB7" />
                            <Setter TargetName="Border" Property="Stroke" Value="#673AB7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Fill" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="Stroke" Value="#40000000" />
                            <Setter Property="Foreground" Value="#80000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TEXT_BLOCK STYLE-->
    <Style x:Key="TextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
    </Style>
    
    <!--CHECK_BOX STYLE-->
    <Style x:Key="MainCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="#343434"/>
        <Setter Property="FontFamily" Value="../fonts/#Montserrat Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxFocusVisual}"/>
        
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"  
                                  Width="18" 
                                  Height="18" 
                                  CornerRadius="2" 
                                  Background="#FAFAFA"
                                  BorderThickness="2"
                                  BorderBrush="#EEEEEE">
                                <Path 
                                    Width="7" Height="7" 
                                    x:Name="CheckMark"
                                    SnapsToDevicePixels="False" 
                                    Stroke="#673AB7"
                                    StrokeThickness="2"
                                    Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#F5F5F5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#673AB7" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#EEEEEE" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#EEEEEE" />
                            <Setter Property="Foreground" Value="#EEEEEE"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ADD_BUTTON STYLE-->
    <Style x:Key="AddButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#343434"/>
        <Setter Property="FontFamily" Value="../fonts/#Open Sans"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#EEEEEE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Top"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F5F5F5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>